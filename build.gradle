plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.16'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.trip'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	all {
		//logback과의 충돌 방지
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}

}

repositories {
	mavenCentral()
}


def getDate() {
	new Date().format('yyyy-MM-dd HH:mm:ss')
}

ext {
	set('springCloudVersion', "2021.0.8")
	timestamp = getDate()
}

// app banner
task appInfo {

	springBoot {
		buildInfo {
		}
		finalizedBy 'processResources'
	}

	processResources {
		filesMatching('**/application.yml') {
			expand(project.properties)
		}
	}
}
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// --- json start
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	// --- json end

	// --- lombok start
	annotationProcessor 'org.projectlombok:lombok:1.18.22' // lombok
	compileOnly 'org.projectlombok:lombok:1.18.22'
	testImplementation 'org.projectlombok:lombok:1.18.22'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
	testCompileOnly 'org.projectlombok:lombok:1.18.22'
	// --- lombok start

	// queryDSL 설정
	implementation "com.querydsl:querydsl-jpa"
	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-collections"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
	annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
	annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드

	// --- JWT start
	implementation "io.jsonwebtoken:jjwt-api:0.11.2"
	implementation "io.jsonwebtoken:jjwt-impl:0.11.2"
	implementation "io.jsonwebtoken:jjwt-jackson:0.11.2"
	// --- JWT end

	implementation group: 'org.apache.tika', name: 'tika-parsers', version: '1.25' //tika
	implementation 'org.apache.poi:poi:4.1.2'
	implementation 'org.apache.poi:poi-ooxml:4.1.2'
    implementation "org.apache.commons:commons-lang3:3.12.0"
	implementation "org.modelmapper:modelmapper:2.3.5"
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

compileJava.options.encoding = 'UTF-8'

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}



test {
	useJUnitPlatform()
}